This is the test task, please implement it using TypeScript + Angular:

Important Notes: 
    Please use Syncfusion EJ2 Angular TreeGrid (trial version), but it doen't support all requested features, so, you HAVE to write custom code.
    We carefully designed this test task to be self-explanatory, ambiguity free, please let us know if you see any room for improvement.
    Please double-check the above requirements before you commit to implement it 100% (word for word) -- not 98%, not 99%.
    We would like to see true quality result rather than speedy test-completion.
    After you complete the test task 100%, you became qualifed candidate for our project, we will sign outsourcing contract with you asap.
    We suggest you add the test task billable hours into the project contract, which saves us from paying for your test task seperately.

Please create a single webpage of TreeGrid, and host it online, so that we can test it together.
You may borrow this source code: https://ej2.syncfusion.com/angular/documentation/treegrid/virtual, and all other Angular TreeGrid samples.
By default, your TreeGrid has 10K rows (RowID=1,2,3...10K), all users edit this single TreeGrid (a JSON file on server), all edits are persistent between users.
This TreeGrid shall always occupy user's browser full-screen
=>Removed virtualization (it was creating evirutal table that requires table height)
, enable Vertical & Horizontal default-scroll-bars, 

but no Pager bar (i.e. single page).
// [pagind]
This TreeGrid shall be fully responsive on both PC browser (keyboard+mouse) and Mobile touchscreen (fingers).
// [isResponsive]= true
(Note:  ☑ means this context menu item is an On/Off switch)

Please implement 2 Context Menus on this TreeGrid:
Context Menu 1 - Right-click or long-press (mobile) a "Column Header", to pop-up these menu items:
    EditCol: User can set (via dialog) a column's Name, Data-Type (Text/Num/Date/Boolean/DropDownList), Default-Value (of current DataType), 
                    Minimum-Column-Width (when screen shrinked), Font-size, Font-color, Background-color, Alignment, Text-wrap ☑.
    NewCol: User can Create a new column, with the same EditCol dialog, SAVE will create the Column, CANCEL will not.
    DelCol: User can Delete a column, such change cannot be undone, (user can also Drag-n-drop to Reorder & Resize columns).
    ChooseCol: User choose columns to show or hide. See https://ej2.syncfusion.com/angular/demos/#/bootstrap5/treegrid/columnchooser
    FreezeCol ☑: Enable Freeze all-left-side (including current) columns, See https://ej2.syncfusion.com/angular/demos/#/bootstrap5/treegrid/frozen-column
    FilterCol ☑: Enable "Filter Bar" in Parent Hierarchy Mode, See https://ej2.syncfusion.com/angular/demos/#/bootstrap5/treegrid/filter
    MultiSort ☑: Enable Multi-Sort for all columns, See https://ej2.syncfusion.com/angular/demos/#/bootstrap5/treegrid/sorting

Context Menu 2 - Rright-click or long-press (mobile) a "Row", to pop-up these menu items:
    AddNext; AddChild; DelRow; EditRow: User can Add(Next)/Add(Child)/Del/"Dialog-Edit" a row, (user can also Drag-n-drop to Move multi-selected rows).
    MultiSelect ☑: Enable user to "Multi-select" rows on PC and Mobile, See https://ej2.syncfusion.com/angular/demos/#/bootstrap5/treegrid/selection
    CopyRows; CutRows: Copy/Cut multi-selected rows - similar to how MS Windows File Explorer copy/cut Files (leaf rows) and Folders (non-leaf rows).
    (The rows being Copied/Cut shall be highlighted in Pink color, but not removed yet, until user perform Paste)
    PasteNext: Insert the copied/cut Rows as "next siblings" of the current row
    PasteChild: Insert the copied/cut Rows as "children" of the current row
    (Copy+Paste will auto-generate new RowIDs, because all RowIDs are unique in a TreeGrid)



    