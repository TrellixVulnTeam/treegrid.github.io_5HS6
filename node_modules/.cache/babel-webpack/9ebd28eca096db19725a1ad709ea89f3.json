{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/crud.service\";\nimport * as i2 from \"@syncfusion/ej2-angular-grids\";\nimport * as i3 from \"@syncfusion/ej2-angular-navigations\";\nimport * as i4 from \"@angular/common\";\nexport let AppComponent = /*@__PURE__*/(() => {\n  class AppComponent {\n    //  / -----\n    constructor(crudService) {\n      this.crudService = crudService;\n      this.title = \" Angular Application\"; // public isHidden: Boolean = true;\n      // xPosTabMenu: Number;\n      // yPosTabMenu: Number;\n      // @ViewChild('dialog')\n      // public alertDialog: DialogComponent;\n      // name = 'Angular';\n\n      this.menuItems = [{\n        text: 'Add'\n      }, {\n        text: 'Edit'\n      }, {\n        text: 'Delete'\n      }, {\n        separator: true\n      }, {\n        text: 'Update'\n      }, {\n        text: 'Cancel'\n      }];\n      this.data = crudService;\n    } // public visible: Boolean = false;\n    // public position: any = {X: 100, Y: 100};\n    // public alertDlgButtons: Object[] = [{\n    //       buttonModel: {\n    //           isPrimary: true,\n    //           content: 'Submit',\n    //           cssClass: 'e-flat',\n    //       },\n    //       click: function () {\n    //           this.hide();\n    //       }\n    //   }];\n\n\n    itemSelect(args) {\n      if (args.item.text == 'Add') {\n        // this.alertDialog.show();\n        alert(\"works\");\n      }\n    }\n\n    getData() {\n      this.crudService.getAllData().subscribe(customers => {\n        alert(JSON.stringify(customers));\n      });\n    }\n\n    dataStateChange(state) {\n      this.crudService.execute(state);\n    }\n\n    dataSourceChanged(state) {\n      if (state.action === 'add') {\n        this.crudService.addRecord(state).subscribe(() => state.endEdit());\n      } else if (state.action === 'edit') {\n        this.crudService.updateRecord(state).subscribe(() => state.endEdit());\n      } else if (state.requestType === 'delete') {\n        this.crudService.deleteRecord(state).subscribe(() => state.endEdit());\n      }\n    }\n\n    ngOnInit() {\n      this.editSettings = {\n        allowEditing: true,\n        allowAdding: true,\n        allowDeleting: true\n      };\n      this.toolbar = ['Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n      let state = {\n        skip: 0,\n        take: 12\n      };\n      this.crudService.execute(state);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 15,\n    vars: 6,\n    consts: [[3, \"click\"], [\"id\", \"target\"], [3, \"dataSource\", \"editSettings\", \"toolbar\", \"dataSourceChanged\", \"dataStateChange\"], [\"field\", \"id\", \"headerText\", \"Task ID\", \"width\", \"120\", \"textAlign\", \"Right\", \"isPrimaryKey\", \"true\", \"type\", \"number\"], [\"field\", \"TaskName\", \"headerText\", \"Task Name\", \"width\", \"225\"], [\"field\", \"StartDate\", \"headerText\", \"Start Date\", \"width\", \"150\", \"format\", \"yMd\", \"type\", \"datetime\", \"editType\", \"datepickeredit\"], [\"field\", \"EndDate\", \"headerText\", \"End Date\", \"width\", \"150\", \"format\", \"yMd\", \"type\", \"datetime\", \"editType\", \"datepickeredit\"], [\"field\", \"Duration\", \"headerText\", \"Duration\", \"type\", \"number\", \"textAlign\", \"Right\", \"width\", \"130\", \"editType\", \"numericedit\"], [\"field\", \"Progress\", \"headerText\", \"Progress\", \"type\", \"number\", \"textAlign\", \"Right\", \"width\", \"130\", \"editType\", \"numericedit\"], [\"field\", \"ParentID\", \"headerText\", \"Parent ID\", \"type\", \"number\", \"textAlign\", \"Right\", \"width\", \"130\", \"editType\", \"numericedit\"], [\"field\", \"isParent\", \"headerText\", \"Is Parent\", \"type\", \"number\", \"textAlign\", \"Right\", \"width\", \"130\", \"editType\", \"boolean\"], [\"id\", \"contextmenu\", \"target\", \"#target\", 3, \"items\", \"select\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n          return ctx.getData();\n        });\n        i0.ɵɵtext(1, \"Get all records \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"ejs-grid\", 2);\n        i0.ɵɵlistener(\"dataSourceChanged\", function AppComponent_Template_ejs_grid_dataSourceChanged_3_listener($event) {\n          return ctx.dataSourceChanged($event);\n        })(\"dataStateChange\", function AppComponent_Template_ejs_grid_dataStateChange_3_listener($event) {\n          return ctx.dataStateChange($event);\n        });\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementStart(5, \"e-columns\");\n        i0.ɵɵelement(6, \"e-column\", 3);\n        i0.ɵɵelement(7, \"e-column\", 4);\n        i0.ɵɵelement(8, \"e-column\", 5);\n        i0.ɵɵelement(9, \"e-column\", 6);\n        i0.ɵɵelement(10, \"e-column\", 7);\n        i0.ɵɵelement(11, \"e-column\", 8);\n        i0.ɵɵelement(12, \"e-column\", 9);\n        i0.ɵɵelement(13, \"e-column\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ejs-contextmenu\", 11);\n        i0.ɵɵlistener(\"select\", function AppComponent_Template_ejs_contextmenu_select_14_listener($event) {\n          return ctx.itemSelect($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", i0.ɵɵpipeBind1(4, 4, ctx.data))(\"editSettings\", ctx.editSettings)(\"toolbar\", ctx.toolbar);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"items\", ctx.menuItems);\n      }\n    },\n    directives: [i2.GridComponent, i2.ColumnsDirective, i2.AggregateColumnsDirective, i2.ColumnDirective, i2.AggregateColumnDirective, i3.ContextMenuComponent],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}